{
  "name": "lambda-live-debugger",
  "version": "0.0.1",
  "type": "module",
  "description": "Debug Lambda functions locally like it is running in the cloud",
  "repository": {
    "type": "git",
    "url": "git@github.com:ServerlessLife/lambda-live-debugger.git"
  },
  "license": "MPL-2.0",
  "author": {
    "name": "Marko (ServerlessLife.com)",
    "email": "marko@serverlesslife.com",
    "organization": false
  },
  "exports": {
    ".": "./dist/index.mjs"
  },
  "keywords": [
    "aws",
    "lambda",
    "debugger",
    "serverless",
    "aws-lambda",
    "javascript",
    "typescript",
    "dev-tools",
    "lambda-debugger",
    "aws-cdk",
    "serverless-framework",
    "sls",
    "aws-sam",
    "sam",
    "terraform",
    "local-debugging",
    "cloud-development"
  ],
  "bin": {
    "lld": "dist/lldebugger.mjs"
  },
  "typings": "dist/index.d.ts",
  "scripts": {
    "typecheck": "tsc --noEmit -p tsconfig.typecheck.json && npx tsc --noEmit -p src/extension/tsconfig.json",
    "lint": "eslint . --fix",
    "prettier": "prettier . --write",
    "prepare": "husky",
    "add-bang": "printf '#!/usr/bin/env node\\n%s' \"$(cat ./dist/lldebugger.mjs)\" > ./dist/lldebugger.mjs.tmp && mv ./dist/lldebugger.mjs.tmp ./dist/lldebugger.mjs",
    "build": "tsc -p tsconfig.build.json && cp src/nodeWorkerRunner.mjs dist && cp src/frameworks/cdkFrameworkWorker.mjs dist/frameworks && node fix-imports.js && npm run add-bang && npm run bundle-extension",
    "bundle-extension": "cd src/extension && npm run build && cd ../../",
    "deploy-github-role": "aws cloudformation deploy --stack-name lld-deploy-role --template-file cloudformation/gitHubDeployRole.yaml --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM --profile lldebugger",
    "deploy-tests": "npm run deploy --workspaces",
    "test": "npm run build && RUN_TEST_FROM_CLI=true vitest run && RUN_TEST_FROM_CLI=true OBSERVABLE_MODE=true vitest run",
    "test-cdk-basic": "npm run build && RUN_TEST_FROM_CLI=true vitest run test/cdk-basic.test.ts",
    "test-cdk-basic-observable": "npm run build && RUN_TEST_FROM_CLI=true OBSERVABLE_MODE=true vitest run test/cdk-basic.test.ts",
    "test-cdk-esm": "npm run build && RUN_TEST_FROM_CLI=true vitest run test/cdk-esm.test.ts",
    "test-cdk-esm-observable": "npm run build && RUN_TEST_FROM_CLI=true OBSERVABLE_MODE=true vitest run test/cdk-esm.test.ts",
    "test-sls-basic": "npm run build && RUN_TEST_FROM_CLI=true vitest run test/sls-basic.test.ts",
    "test-sls-basic-observable": "npm run build && RUN_TEST_FROM_CLI=true OBSERVABLE_MODE=true vitest run test/sls-basic.test.ts",
    "test-sls-esbuild-cjs": "npm run build && RUN_TEST_FROM_CLI=true vitest run test/sls-esbuild-cjs.test.ts",
    "test-sls-esbuild-cjs-observable": "npm run build && RUN_TEST_FROM_CLI=true OBSERVABLE_MODE=true vitest run test/sls-esbuild-cjs.test.ts",
    "test-sls-esbuild-esm": "npm run build && RUN_TEST_FROM_CLI=true vitest run test/sls-esbuild-esm.test.ts",
    "test-sls-esbuild-esm-observable": "npm run build && RUN_TEST_FROM_CLI=true OBSERVABLE_MODE=true vitest run test/sls-esbuild-esm.test.ts",
    "test-osls-basic": "npm run build && RUN_TEST_FROM_CLI=true vitest run test/osls-basic.test.ts",
    "test-osls-basic-observable": "npm run build && RUN_TEST_FROM_CLI=true OBSERVABLE_MODE=true vitest run test/osls-basic.test.ts",
    "test-sam-basic": "npm run build && RUN_TEST_FROM_CLI=true vitest run test/sam-basic.test.ts",
    "test-sam-basic-observable": "npm run build && RUN_TEST_FROM_CLI=true OBSERVABLE_MODE=true vitest run test/sam-basic.test.ts",
    "test-sam-alt": "npm run build && RUN_TEST_FROM_CLI=true vitest run test/sam-alt.test.ts",
    "test-sam-alt-observable": "npm run build && RUN_TEST_FROM_CLI=true OBSERVABLE_MODE=true vitest run test/sam-alt.test.ts",
    "test-terraform-basic": "npm run build && RUN_TEST_FROM_CLI=true vitest run test/terraform-basic.test.ts",
    "test-terraform-basic-observable": "npm run build && RUN_TEST_FROM_CLI=true OBSERVABLE_MODE=true vitest run test/terraform-basic.test.ts",
    "docs:dev": "vitepress dev",
    "docs:build": "vitepress build",
    "docs:preview": "vitepress preview"
  },
  "devDependencies": {
    "@eslint/js": "^9.8.0",
    "@tsconfig/node20": "^20.1.4",
    "@types/aws-iot-device-sdk": "^2.2.8",
    "@types/eslint__js": "^8.42.3",
    "@types/eslint-config-prettier": "^6.11.3",
    "@types/inquirer": "^9.0.7",
    "@types/node": "^20.11.16",
    "@types/serverless": "^3.12.22",
    "aws-cdk": "2.135.0",
    "aws-cdk-lib": "2.135.0",
    "constructs": "^10.0.0",
    "eslint": "^9.8.0",
    "eslint-config-prettier": "^9.1.0",
    "globals": "^15.9.0",
    "husky": "^9.1.4",
    "prettier": "^3.3.3",
    "semantic-release": "^23.0.8",
    "serverless": "^3.38.0",
    "osls": "^3.41.0",
    "serverless-esbuild": "^1.52.1",
    "tsx": "^4.7.1",
    "typescript-eslint": "^8.0.0",
    "vitepress": "^1.3.3"
  },
  "dependencies": {
    "@aws-sdk/client-cloudformation": "^3.577.0",
    "@aws-sdk/client-iam": "^3.577.0",
    "@aws-sdk/client-iot": "^3.577.0",
    "@aws-sdk/client-iot-data-plane": "^3.577.0",
    "@aws-sdk/client-lambda": "^3.577.0",
    "@aws-sdk/client-s3": "^3.577.0",
    "@aws-sdk/credential-providers": "^3.577.0",
    "aws-iot-device-sdk": "^2.2.13",
    "chalk": "^5.3.0",
    "chokidar": "^3.6.0",
    "commander": "^12.0.0",
    "esbuild": "^0.20.1",
    "inquirer": "^9.2.23",
    "jsonc-parser": "^3.2.1",
    "node-machine-id": "^1.1.12",
    "toml": "^3.0.0",
    "typescript": "~5.4.3",
    "yaml": "^2.4.2"
  },
  "bundleDependencies": [
    "@aws-sdk/client-cloudformation",
    "@aws-sdk/client-iam",
    "@aws-sdk/client-iot",
    "@aws-sdk/client-iot-data-plane",
    "@aws-sdk/client-lambda",
    "@aws-sdk/client-s3",
    "@aws-sdk/credential-providers",
    "aws-iot-device-sdk",
    "chokidar",
    "commander",
    "node-machine-id",
    "toml",
    "yaml",
    "typescript",
    "inquirer",
    "jsonc-parser",
    "chalk"
  ],
  "workspaces": [
    "src/extension/*",
    "test",
    "test/cdk-basic",
    "test/cdk-esm",
    "test/cdk-config",
    "test/sls-basic",
    "test/sls-esbuild",
    "test/osls-basic",
    "test/sam-basic",
    "test/sam-alt",
    "test/terraform-basic"
  ]
}