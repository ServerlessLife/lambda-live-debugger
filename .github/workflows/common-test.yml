name: Common CI tests

run-name: 'Test: mode=${{ inputs.mode }}, testMonorepo=${{ inputs.testMonorepo }}'

on:
  workflow_call:
    inputs:
      mode:
        description: "'build' (just builded code, used while publishing) or 'global' (real NPM installed globally) or 'local' (real NPM installed locally)"
        type: string
        required: true
      testMonorepo:
        description: 'Test monorepo by specifying folder in config'
        type: string
        required: true

permissions:
  id-token: write
  contents: write

env:
  DISABLE_PARALLEL_DEPLOY: false
  REAL_NPM: ${{ inputs.mode == 'global' || inputs.mode == 'local' }}
  TEST_MONOREPO: ${{ inputs.testMonorepo }}
  node_version: 20

jobs:
  test-cdk-basic:
    runs-on: ubuntu-latest
    concurrency:
      group: test-cdk-basic
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci
      - name: Download build artifact
        uses: actions/download-artifact@v4
        if: ${{ inputs.mode == 'build' }}
        with:
          name: dist
          path: dist
      - name: Install lambda-live-debugger globally
        if: ${{ inputs.mode == 'global' }}
        run: |
          npm i lambda-live-debugger -g
        working-directory: test
      - name: Install lambda-live-debugger locally
        if: ${{ inputs.mode == 'local' }}
        run: |
          npm i lambda-live-debugger
        working-directory: test
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: GitHubActions
      - name: Destroy
        run: npm run destroy
        working-directory: test/cdk-basic
        continue-on-error: true
      - name: Deploy
        run: npm run deploy
        working-directory: test/cdk-basic
      - name: Test
        run: npx vitest --retry 1 test/cdk-basic.test.ts
      - name: Test - observable mode
        run: OBSERVABLE_MODE=true npx vitest --retry 1 test/cdk-basic.test.ts

  test-sls-basic:
    runs-on: ubuntu-latest
    concurrency:
      group: test-sls-basic
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci
      - name: Download build artifact
        uses: actions/download-artifact@v4
        if: ${{ inputs.mode == 'build' }}
        with:
          name: dist
          path: dist
      - name: Install lambda-live-debugger globally
        if: ${{ inputs.mode == 'global' }}
        run: |
          npm i lambda-live-debugger -g
          npm i serverless@3.38.0 -g
        working-directory: test
      - name: Install lambda-live-debugger locally
        if: ${{ inputs.mode == 'local' }}
        run: |
          npm i lambda-live-debugger
        working-directory: test
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: GitHubActions
      - name: Destroy
        run: npm run destroy
        working-directory: test/sls-basic
        continue-on-error: true
      - name: Deploy
        run: npm run deploy
        working-directory: test/sls-basic
      - name: Test
        run: npx vitest --retry 1 test/sls-basic.test.ts
      - name: Test - observable mode
        run: OBSERVABLE_MODE=true npx vitest --retry 1 test/sls-basic.test.ts

  test-sls-esbuild-cjs:
    runs-on: ubuntu-latest
    concurrency:
      group: test-sls-esbuild-cjs
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci
      - name: Download build artifact
        uses: actions/download-artifact@v4
        if: ${{ inputs.mode == 'build' }}
        with:
          name: dist
          path: dist
      - name: Install lambda-live-debugger globally
        if: ${{ inputs.mode == 'global' }}
        run: |
          npm i lambda-live-debugger -g
          npm i serverless@3.38.0 -g
        working-directory: test
      - name: Install lambda-live-debugger locally
        if: ${{ inputs.mode == 'local' }}
        run: |
          npm i lambda-live-debugger
        working-directory: test
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: GitHubActions
      - name: Destroy
        run: npm run destroy
        working-directory: test/sls-esbuild-cjs
        continue-on-error: true
      - name: Deploy
        run: npm run deploy
        working-directory: test/sls-esbuild-cjs
      - name: Test
        run: npx vitest --retry 1 test/sls-esbuild-cjs.test.ts
      - name: Test - observable mode
        run: OBSERVABLE_MODE=true npx vitest --retry 1 test/sls-esbuild-cjs.test.ts

  test-sls-esbuild-esm:
    runs-on: ubuntu-latest
    concurrency:
      group: test-sls-esbuild-esm
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci
      - name: Download build artifact
        uses: actions/download-artifact@v4
        if: ${{ inputs.mode == 'build' }}
        with:
          name: dist
          path: dist
      - name: Install lambda-live-debugger globally
        if: ${{ inputs.mode == 'global' }}
        run: |
          npm i lambda-live-debugger -g
          npm i serverless@3.38.0 -g
        working-directory: test
      - name: Install lambda-live-debugger locally
        if: ${{ inputs.mode == 'local' }}
        run: |
          npm i lambda-live-debugger
        working-directory: test
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: GitHubActions
      - name: Destroy
        run: npm run destroy
        working-directory: test/sls-esbuild-esm
        continue-on-error: true
      - name: Deploy
        run: npm run deploy
        working-directory: test/sls-esbuild-esm
      - name: Test
        run: npx vitest --retry 1 test/sls-esbuild-esm.test.ts
      - name: Test - observable mode
        run: OBSERVABLE_MODE=true npx vitest --retry 1 test/sls-esbuild-esm.test.ts

  test-sam-basic:
    runs-on: ubuntu-latest
    concurrency:
      group: test-sam-basic
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci
      - name: Download build artifact
        uses: actions/download-artifact@v4
        if: ${{ inputs.mode == 'build' }}
        with:
          name: dist
          path: dist
      - name: Install lambda-live-debugger globally
        if: ${{ inputs.mode == 'global' }}
        run: |
          npm i lambda-live-debugger -g
        working-directory: test
      - name: Install lambda-live-debugger locally
        if: ${{ inputs.mode == 'local' }}
        run: |
          npm i lambda-live-debugger
        working-directory: test
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: GitHubActions
      - name: Destroy
        run: npm run destroy
        working-directory: test/sam-basic
        continue-on-error: true
      - name: Deploy
        run: npm run deploy
        working-directory: test/sam-basic
      - name: Test
        run: npx vitest --retry 1 test/sam-basic.test.ts
      - name: Test - observable mode
        run: OBSERVABLE_MODE=true npx vitest --retry 1 test/sam-basic.test.ts

  test-terraform-basic:
    runs-on: ubuntu-latest
    concurrency:
      group: test-terraform-basic
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci
      - name: Download build artifact
        uses: actions/download-artifact@v4
        if: ${{ inputs.mode == 'build' }}
        with:
          name: dist
          path: dist
      - name: Install lambda-live-debugger globally
        if: ${{ inputs.mode == 'global' }}
        run: |
          npm i lambda-live-debugger -g
        working-directory: test
      - name: Install lambda-live-debugger locally
        if: ${{ inputs.mode == 'local' }}
        run: |
          npm i lambda-live-debugger
        working-directory: test
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: GitHubActions
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: |
          ./create_bucket.sh lld-terraform-basic
          terraform init -backend-config="bucket=lld-terraform-basic"
        working-directory: test/terraform-basic
      - name: Destroy
        run: npm run destroy
        working-directory: test/terraform-basic
        continue-on-error: true
      - name: Deploy
        run: npm run deploy
        working-directory: test/terraform-basic
      - name: Test
        run: npx vitest --retry 1 test/terraform-basic.test.ts
      - name: Test - observable mode
        run: OBSERVABLE_MODE=true npx vitest --retry 1 test/terraform-basic.test.ts
